function createMixedSequence(pattern, n = 0) {
    if (n > 32) {
        return 'Я так далеко не считала';
    }
    if (pattern.length == 0 || n == 0) {
        return [];
    }
    if (pattern.length < n) {
        while (pattern.length < n) {
            pattern.push(...pattern);
        }
        pattern.length = n;
    }
    let fibonacci = [0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987, 1597,2584,4181,6765,10946,17711,28657,46368,75025, 121393,196418,317811,514229,832040,1346269, 2178309,3524578,5702887,9227465,14930352,24157817, 39088169,63245986,102334155],
        padovan = [1,0,0,1,0,1,1,1,2,2,3,4,5,7,9,12,16,21,28,37,49,65,86,114,151,200,265,351,465,616,816,1081,1432,1897,2513,3329,4410,5842,7739,10252,13581,17991,23833,31572,41824,55405,73396,97229,128801,170625],
        jacobsthal = [0,1,1,3,5,11,21,43,85,171,341,683,1365,2731,5461,10923,21845,43691,87381,174763,349525,699051,1398101,2796203,5592405,11184811,22369621,44739243,89478485,178956971,357913941,715827883,1431655765,2863311531,5726623061],
        pell = [0,1,2,5,12,29,70,169,408,985,2378,5741,13860,33461,80782,195025,470832,1136689,2744210,6625109,15994428,38613965,93222358,225058681,543339720,1311738121,3166815962,7645370045,18457556052,44560482149,107578520350,259717522849],
        tribonacc = [0,0,1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136,5768,10609,19513,35890,66012,121415,223317,410744,755476,1389537,2555757,4700770,8646064,15902591,29249425,53798080,98950096,181997601,334745777,615693474,1132436852],
        tetranacci = [0,0,0,1,1,2,4,8,15,29,56,108,208,401,773,1490,2872,5536,10671,20569,39648,76424,147312,283953,547337,1055026,2033628,3919944,7555935,14564533,28074040,54114452,104308960,201061985,387559437,747044834,1439975216,2775641472],
        sequences = new Map();

    sequences
            .set('fib', fibonacci)
            .set('pad', padovan)
            .set('jac', jacobsthal)
            .set('pel', pell)
            .set('tri', tribonacc)
            .set('tet', tetranacci);

    let result = [];
    for (let key of pattern) {
        let keyValues = sequences.get(key);
        result.push(keyValues[0]);
        keyValues.shift();
    }

    return result;
}

/*
function createFibonachi(n) {
    let a = 0,
        b = 0,
        counter = 0,
        fibArray = [];
    while (counter < n) {
        let newValue = a + b;
        fibArray.push(newValue);
        a = b;
        b = newValue;
        counter++;
    }
}
function createPadovan(n) {
    padArray = [1,0,0,1,0,1,1,1,2,2,3,4,5,7,9,12,16,21,28,37,49,65,86,114,151,200,265,351,465,616,816,1081,1432,1897,2513,3329,4410,5842,7739,10252,13581,17991,23833,31572,41824,55405,73396,97229,128801,170625];
}
function createJacobsthal(n) {
    jacArray = [0,1,1,3,5,11,21,43,85,171,341,683,1365,2731,5461,10923,21845,43691,87381,174763,349525,699051,1398101,2796203,5592405,11184811,22369621,44739243,89478485,178956971,357913941,715827883,1431655765,2863311531,5726623061];
}
function createPell(n) {
    pelArray = [0,1,2,5,12,29,70,169,408,985,2378,5741,13860,33461,80782,195025,470832,1136689,2744210,6625109,15994428,38613965,93222358,225058681,543339720,1311738121,3166815962,7645370045,18457556052,44560482149,107578520350,259717522849];
}
function createTribonacci(n) {
    triArray = [0,0,1,1,2,4,7,13,24,44,81,149,274,504,927,1705,3136,5768,10609,19513,35890,66012,121415,223317,410744,755476,1389537,2555757,4700770,8646064,15902591,29249425,53798080,98950096,181997601,334745777,615693474,1132436852];
}
function createTetranacci(n) {
    tetArray = [0,0,0,1,1,2,4,8,15,29,56,108,208,401,773,1490,2872,5536,10671,20569,39648,76424,147312,283953,547337,1055026,2033628,3919944,7555935,14564533,28074040,54114452,104308960,201061985,387559437,747044834,1439975216,2775641472];
}
}*/

console.log(createMixedSequence(['fib', 'pad', 'pel'], 5));
